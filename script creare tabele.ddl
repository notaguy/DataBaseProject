-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-01-04 01:17:13 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE cmd (
    descriere VARCHAR2(100) NOT NULL,
    cmd_id    NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE cmd
    ADD CONSTRAINT cmd_descriere_ck CHECK ( REGEXP_LIKE ( descriere,
                                                          '^[a-zA-Z_ ]*$' ) );

ALTER TABLE cmd ADD CONSTRAINT cmd_pk PRIMARY KEY ( cmd_id );

ALTER TABLE cmd ADD CONSTRAINT cmd_descriere_un UNIQUE ( descriere );

CREATE TABLE diagnostic (
    denumire                 VARCHAR2(100) NOT NULL,
    detalii                  VARCHAR2(100) NOT NULL,
    simptome                 VARCHAR2(100),
    diagnostic_id            NUMBER(5) NOT NULL,
    programare_programare_id NUMBER(5) NOT NULL,
    cmd_cmd_id               NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE diagnostic
    ADD CONSTRAINT diagnostic_denumire_ck CHECK ( REGEXP_LIKE ( denumire,
                                                                '^[a-zA-Z_ ]*$' ) );

CREATE UNIQUE INDEX diagnostic__idx ON
    diagnostic (
        programare_programare_id
    ASC )
        LOGGING;

ALTER TABLE diagnostic ADD CONSTRAINT diagnostic_pk PRIMARY KEY ( diagnostic_id );

CREATE TABLE istoric_initial (
    boli_anterioare    VARCHAR2(100),
    alergii            VARCHAR2(100),
    tratament_curent   VARCHAR2(100),
    pacient_pacient_id NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE istoric_initial ADD CONSTRAINT istoric_initial_pk PRIMARY KEY ( pacient_pacient_id );

CREATE TABLE medic (
    nume                         VARCHAR2(10) NOT NULL,
    prenume                      VARCHAR2(10) NOT NULL,
    medic_id                     NUMBER(5) NOT NULL,
    specializari_specializare_id NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE medic
    ADD CONSTRAINT medic_nume_ck CHECK ( REGEXP_LIKE ( nume,
                                                       '^[a-zA-Z_ ]*$' ) );

ALTER TABLE medic
    ADD CONSTRAINT medic_prenume_ck CHECK ( REGEXP_LIKE ( prenume,
                                                          '^[a-zA-Z_ ]*$' ) );

ALTER TABLE medic ADD CONSTRAINT medic_pk PRIMARY KEY ( medic_id );

CREATE TABLE pacient (
    nume       VARCHAR2(20) NOT NULL,
    prenume    VARCHAR2(20) NOT NULL,
    varsta     NUMBER(3) NOT NULL,
    gen        VARCHAR2(1),
    telefon    VARCHAR2(10) NOT NULL,
    email      VARCHAR2(100),
    pacient_id NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE pacient
    ADD CONSTRAINT pacient_nume_ck CHECK ( REGEXP_LIKE ( nume,
                                                         '^[a-zA-Z_ ]*$' ) );

ALTER TABLE pacient
    ADD CONSTRAINT pacient_prenume_ck CHECK ( REGEXP_LIKE ( prenume,
                                                            '^[a-zA-Z_ ]*$' ) );

ALTER TABLE pacient
    ADD CONSTRAINT pacient_gen_ck CHECK ( REGEXP_LIKE ( gen,
                                                        '^[A-Z]*$' ) );

ALTER TABLE pacient
    ADD CONSTRAINT pacient_telefon_ck CHECK ( REGEXP_LIKE ( telefon,
                                                            '^[0][:7:3:2][0-9 ]*$' ) );

ALTER TABLE pacient
    ADD CONSTRAINT pacient_email_ck CHECK ( REGEXP_LIKE ( email,
                                                          '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE pacient ADD CONSTRAINT pacient_pk PRIMARY KEY ( pacient_id );

CREATE TABLE programare (
    data_ora           TIMESTAMP(0) NOT NULL,
    etaj               NUMBER(2) NOT NULL,
    sala               NUMBER(2) NOT NULL,
    serviciu           VARCHAR2(10),
    programare_id      NUMBER(5) NOT NULL,
    pacient_pacient_id NUMBER(5) NOT NULL,
    medic_medic_id     NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE programare ADD CHECK ( etaj BETWEEN 0 AND 3 );

ALTER TABLE programare ADD CHECK ( sala BETWEEN 1 AND 20 );

ALTER TABLE programare
    ADD CONSTRAINT programare_serviciu_ck CHECK ( REGEXP_LIKE ( serviciu,
                                                                '^[a-zA-Z_ ]*$' ) );

ALTER TABLE programare ADD CONSTRAINT programare_pk PRIMARY KEY ( programare_id );

ALTER TABLE programare ADD CONSTRAINT programare_data_ora_un UNIQUE ( data_ora );

CREATE TABLE specializari (
    denumire        VARCHAR2(50) NOT NULL,
    specializare_id NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE specializari
    ADD CONSTRAINT specializari_denumire_ck CHECK ( REGEXP_LIKE ( denumire,
                                                                  '^[a-zA-Z_ ]*$' ) );

ALTER TABLE specializari ADD CONSTRAINT specializari_pk PRIMARY KEY ( specializare_id );

ALTER TABLE specializari ADD CONSTRAINT specializari_denumire_un UNIQUE ( denumire );

CREATE TABLE tratament (
    nume_pastila             VARCHAR2(20) NOT NULL,
    cantitate                NUMBER(5),
    interval_administrare    VARCHAR2(50) NOT NULL,
    durata_tratament         VARCHAR2(30) NOT NULL,
    diagnostic_diagnostic_id NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE tratament
    ADD CONSTRAINT tratament_nume_pastila_ck CHECK ( REGEXP_LIKE ( nume_pastila,
                                                                   '^[a-zA-Z_ ]*$' ) );

ALTER TABLE diagnostic
    ADD CONSTRAINT diagnostic_cmd_fk FOREIGN KEY ( cmd_cmd_id )
        REFERENCES cmd ( cmd_id )
        ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE diagnostic
    ADD CONSTRAINT diagnostic_programare_fk FOREIGN KEY ( programare_programare_id )
        REFERENCES programare ( programare_id )
         ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE istoric_initial
    ADD CONSTRAINT istoric_initial_pacient_fk FOREIGN KEY ( pacient_pacient_id )
        REFERENCES pacient ( pacient_id )
        ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE medic
    ADD CONSTRAINT medic_specializari_fk FOREIGN KEY ( specializari_specializare_id )
        REFERENCES specializari ( specializare_id )
        ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE programare
    ADD CONSTRAINT programare_medic_fk FOREIGN KEY ( medic_medic_id )
        REFERENCES medic ( medic_id )
        ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE programare
    ADD CONSTRAINT programare_pacient_fk FOREIGN KEY ( pacient_pacient_id )
        REFERENCES pacient ( pacient_id )
        ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE tratament
    ADD CONSTRAINT tratament_diagnostic_fk FOREIGN KEY ( diagnostic_diagnostic_id )
        REFERENCES diagnostic ( diagnostic_id )
        ON DELETE CASCADE
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER trg_programare_BRIU 
    BEFORE INSERT OR UPDATE ON Programare 
    FOR EACH ROW 
BEGIN
	IF( :new.Data_Ora <= SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
		'Data invalida: ' || TO_CHAR( :new.Data_Ora, 'DD.MM.YYYY HH24:MI:SS' ) || ' trebuie sa fie mai mare decat data curenta.' );
	END IF;
END; 
/

CREATE SEQUENCE diagnostic_diagnostic_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER diagnostic_diagnostic_id_trg BEFORE
    INSERT ON diagnostic
    FOR EACH ROW
    WHEN ( new.diagnostic_id IS NULL )
BEGIN
    :new.diagnostic_id := diagnostic_diagnostic_id_seq.nextval;
END;
/

CREATE SEQUENCE medic_medic_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER medic_medic_id_trg BEFORE
    INSERT ON medic
    FOR EACH ROW
    WHEN ( new.medic_id IS NULL )
BEGIN
    :new.medic_id := medic_medic_id_seq.nextval;
END;
/

CREATE SEQUENCE pacient_pacient_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pacient_pacient_id_trg BEFORE
    INSERT ON pacient
    FOR EACH ROW
    WHEN ( new.pacient_id IS NULL )
BEGIN
    :new.pacient_id := pacient_pacient_id_seq.nextval;
END;
/

CREATE SEQUENCE programare_programare_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER programare_programare_id_trg BEFORE
    INSERT ON programare
    FOR EACH ROW
    WHEN ( new.programare_id IS NULL )
BEGIN
    :new.programare_id := programare_programare_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             1
-- ALTER TABLE                             31
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           5
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          4
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
